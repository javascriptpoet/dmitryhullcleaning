{
  "{\"sourceRoot\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server\",\"filename\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server\",\"plugins\":[{\"key\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/node_modules/babel-plugin-transform-object-rest-spread/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server",
      "filename": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/node_modules/babel-plugin-transform-object-rest-spread/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/index.js",
        "plugins": [
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _ramda = _interopRequireWildcard(require(\"ramda\"));\n\nvar _graphqlTag = _interopRequireDefault(require(\"graphql-tag\"));\n\nvar _dns = require(\"dns\");\n\nvar _controller = _interopRequireDefault(require(\"./modules/users/controller\"));\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _passportLocal = require(\"passport-local\");\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _authRouter = _interopRequireDefault(require(\"./authRouter\"));\n\nvar _getToken = _interopRequireDefault(require(\"./getToken\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _controller2 = _interopRequireDefault(require(\"./modules/permissions/controller\"));\n\nvar _connectFlash = _interopRequireDefault(require(\"connect-flash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _require = require(\"apollo-server\"),\n    ApolloServer = _require.ApolloServer;\n\nvar express = require(\"express\");\n\nvar JwtStrategy = require(\"passport-jwt\");\n\nvar controllers = {\n  usersController: _controller[\"default\"],\n  permissionsController: permissionsController\n};\n\n_passport[\"default\"].use(new _passportLocal.strategy.LocalStrategy(\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(username, password, done) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return (0, _controller[\"default\"])()._findByUsername(username);\n\n          case 3:\n            user = _context.sent;\n\n            if (!(user.password !== password)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(null, false, {\n              message: \"wrong password\"\n            }));\n\n          case 6:\n            return _context.abrupt(\"return\", done(user));\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (!(_context.t0 instanceof _apolloServer.ApolloError)) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(null, false, {\n              message: _context.t0.message\n            }));\n\n          case 13:\n            return _context.abrupt(\"return\", done(_context.t0));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}()));\n\nvar options = {\n  jwtFromRequest: function jwtFromRequest(req) {\n    var token = req && req.cookies ? req.cookies[\"jwt\"] : (0, _getToken[\"default\"])(\"\");\n    return token;\n  },\n  secretOrKey: process.env.JWT_SECRET\n};\nvar guestUser = {\n  roles: [\"guest\"]\n};\nvar jwtStrategy = new JwtStrategy(options,\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(_ref2, done) {\n    var userId, user;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            userId = _ref2.userId;\n            if (!userId) done(null, guestUser);\n            _context2.prev = 2;\n            _context2.next = 5;\n            return (0, _controller[\"default\"])()._findById(userId);\n\n          case 5:\n            user = _context2.sent;\n            return _context2.abrupt(\"return\", next(null, user));\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n\n            if (!(_context2.t0 instanceof _apolloServer.ApolloError)) {\n              _context2.next = 13;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", done(null, false, {\n              message: _context2.t0.message\n            }));\n\n          case 13:\n            return _context2.abrupt(\"return\", done(_context2.t0));\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}());\n\n_passport[\"default\"].use(jwtStrategy);\n\nvar app = express();\napp.use((0, _cookieParser[\"default\"])());\napp.use((0, _bodyParser[\"default\"])());\napp.use(express.session({\n  cookie: {\n    maxAge: 60000\n  }\n}));\napp.use((0, _connectFlash[\"default\"])());\napp.use(_passport[\"default\"].initialize());\napp.use(\"/api\", (0, _authRouter[\"default\"])(_passport[\"default\"]));\napp.post(\"/graphql\", _passport[\"default\"].authenticate([\"jwt\"], {\n  session: false\n}));\nnew ApolloServer({\n  typeDefs: typeDefs,\n  resolvers: resolvers,\n  graphiql: true,\n  pretty: true,\n  context: function context(req, res) {\n    return {\n      user: req.user,\n      controllers: _ramda[\"default\"].map(function (controller) {\n        return controller({\n          currentUser: req.user\n        });\n      })\n    };\n  }\n});\nserver.applyMiddleware({\n  app: app,\n  path: \"/graphql\"\n});\nserver.listen().then(function (_ref4) {\n  var url = _ref4.url;\n  return console.log(\"Running a GraphQL API server at \".concat(url));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "ApolloServer",
        "express",
        "JwtStrategy",
        "controllers",
        "usersController",
        "permissionsController",
        "passport",
        "use",
        "strategy",
        "LocalStrategy",
        "username",
        "password",
        "done",
        "_findByUsername",
        "user",
        "message",
        "ApolloError",
        "options",
        "jwtFromRequest",
        "req",
        "token",
        "cookies",
        "secretOrKey",
        "process",
        "env",
        "JWT_SECRET",
        "guestUser",
        "roles",
        "jwtStrategy",
        "userId",
        "_findById",
        "next",
        "app",
        "session",
        "cookie",
        "maxAge",
        "initialize",
        "post",
        "authenticate",
        "typeDefs",
        "resolvers",
        "graphiql",
        "pretty",
        "context",
        "res",
        "Ramda",
        "map",
        "controller",
        "currentUser",
        "server",
        "applyMiddleware",
        "path",
        "listen",
        "then",
        "url",
        "console",
        "log"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;eAjByBA,OAAO,CAAC,eAAD,C;IAAxBC,Y,YAAAA,Y;;AAKR,IAAMC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AAGA,IAAMG,WAAW,GAAGH,OAAO,CAAC,cAAD,CAA3B;;AAWA,IAAMI,WAAW,GAAG;AAClBC,EAAAA,eAAe,EAAfA,sBADkB;AAElBC,EAAAA,qBAAqB,EAArBA;AAFkB,CAApB;;AAKAC,qBAASC,GAAT,CACE,IAAIC,wBAASC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA2B,iBAAOC,QAAP,EAAiBC,QAAjB,EAA2BC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEJ,8BAAkBC,eAAlB,CAAkCH,QAAlC,CAFI;;AAAA;AAEjBI,YAAAA,IAFiB;;AAAA,kBAGnBA,IAAI,CAACH,QAAL,KAAkBA,QAHC;AAAA;AAAA;AAAA;;AAAA,6CAIdC,IAAI,CAAC,IAAD,EAAO,KAAP,EAAc;AAAEG,cAAAA,OAAO;AAAT,aAAd,CAJU;;AAAA;AAAA,6CAKhBH,IAAI,CAACE,IAAD,CALY;;AAAA;AAAA;AAAA;;AAAA,kBAOnB,uBAAaE,yBAPM;AAAA;AAAA;AAAA;;AAAA,6CAQdJ,IAAI,CAAC,IAAD,EAAO,KAAP,EAAc;AAAEG,cAAAA,OAAO,EAAE,YAAEA;AAAb,aAAd,CARU;;AAAA;AAAA,6CAShBH,IAAI,aATY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA,IADF;;AAeA,IAAMK,OAAO,GAAG;AACdC,EAAAA,cAAc,EAAE,wBAASC,GAAT,EAAc;AAC5B,QAAMC,KAAK,GAAGD,GAAG,IAAIA,GAAG,CAACE,OAAX,GAAqBF,GAAG,CAACE,OAAJ,CAAY,KAAZ,CAArB,GAA0C,0BAAS,EAAT,CAAxD;AACA,WAAOD,KAAP;AACD,GAJa;AAKdE,EAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC;AALX,CAAhB;AAQA,IAAMC,SAAS,GAAG;AAAEC,EAAAA,KAAK,EAAE,CAAC,OAAD;AAAT,CAAlB;AACA,IAAMC,WAAW,GAAG,IAAI1B,WAAJ,CAAgBe,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyB,yBAAmBL,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASiB,YAAAA,MAAT,SAASA,MAAT;AAC3C,gBAAI,CAACA,MAAL,EAAajB,IAAI,CAAC,IAAD,EAAOc,SAAP,CAAJ;AAD8B;AAAA;AAAA,mBAGtB,8BAAkBI,SAAlB,CAA4BD,MAA5B,CAHsB;;AAAA;AAGnCf,YAAAA,IAHmC;AAAA,8CAIlCiB,IAAI,CAAC,IAAD,EAAOjB,IAAP,CAJ8B;;AAAA;AAAA;AAAA;;AAAA,kBAMrC,wBAAaE,yBANwB;AAAA;AAAA;AAAA;;AAAA,8CAOhCJ,IAAI,CAAC,IAAD,EAAO,KAAP,EAAc;AAAEG,cAAAA,OAAO,EAAE,aAAEA;AAAb,aAAd,CAP4B;;AAAA;AAAA,8CAQlCH,IAAI,cAR8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA,IAApB;;AAWAN,qBAASC,GAAT,CAAaqB,WAAb;;AAEA,IAAMI,GAAG,GAAG/B,OAAO,EAAnB;AAEA+B,GAAG,CAACzB,GAAJ,CAAQ,+BAAR;AACAyB,GAAG,CAACzB,GAAJ,CAAQ,6BAAR;AACAyB,GAAG,CAACzB,GAAJ,CAAQN,OAAO,CAACgC,OAAR,CAAgB;AAAEC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV;AAAV,CAAhB,CAAR;AACAH,GAAG,CAACzB,GAAJ,CAAQ,+BAAR;AACAyB,GAAG,CAACzB,GAAJ,CAAQD,qBAAS8B,UAAT,EAAR;AACAJ,GAAG,CAACzB,GAAJ,CAAQ,MAAR,EAAgB,4BAAWD,oBAAX,CAAhB;AACA0B,GAAG,CAACK,IAAJ,CAAS,UAAT,EAAqB/B,qBAASgC,YAAT,CAAsB,CAAC,KAAD,CAAtB,EAA+B;AAAEL,EAAAA,OAAO,EAAE;AAAX,CAA/B,CAArB;AAEA,IAAIjC,YAAJ,CAAiB;AACfuC,EAAAA,QAAQ,EAARA,QADe;AAEfC,EAAAA,SAAS,EAATA,SAFe;AAGfC,EAAAA,QAAQ,EAAE,IAHK;AAIfC,EAAAA,MAAM,EAAE,IAJO;AAKfC,EAAAA,OAAO,EAAE,iBAACxB,GAAD,EAAMyB,GAAN,EAAc;AACrB,WAAO;AACL9B,MAAAA,IAAI,EAAEK,GAAG,CAACL,IADL;AAELX,MAAAA,WAAW,EAAE0C,kBAAMC,GAAN,CAAU,UAAAC,UAAU;AAAA,eAC/BA,UAAU,CAAC;AAAEC,UAAAA,WAAW,EAAE7B,GAAG,CAACL;AAAnB,SAAD,CADqB;AAAA,OAApB;AAFR,KAAP;AAMD;AAZc,CAAjB;AAcAmC,MAAM,CAACC,eAAP,CAAuB;AAAElB,EAAAA,GAAG,EAAHA,GAAF;AAAOmB,EAAAA,IAAI,EAAE;AAAb,CAAvB;AACAF,MAAM,CACHG,MADH,GAEGC,IAFH,CAEQ;AAAA,MAAGC,GAAH,SAAGA,GAAH;AAAA,SAAaC,OAAO,CAACC,GAAR,2CAA+CF,GAA/C,EAAb;AAAA,CAFR",
      "sourceRoot": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib",
      "sourcesContent": [
        "const { ApolloServer } = require(\"apollo-server\")\nimport { reduce } from \"ramda\"\nimport gql from \"graphql-tag\"\nimport { TIMEOUT, resolveSoa } from \"dns\"\nimport usersController from \"./modules/users/controller\"\nconst express = require(\"express\")\nimport passport from \"passport\"\nimport { strategy } from \"passport-local\"\nconst JwtStrategy = require(\"passport-jwt\")\nimport jwt from \"jsonwebtoken\"\nimport authRouter from \"./authRouter\"\nimport getToken from \"./getToken\"\nimport cookieParser from \"cookie-parser\"\nimport bodyParser from \"body-parser\"\nimport Ramda from \"ramda\"\nimport { ApolloError } from \"apollo-server\"\nimport permissionsControllerFactory from \"./modules/permissions/controller\"\nimport flash from \"connect-flash\"\n\nconst controllers = {\n  usersController,\n  permissionsController\n}\n\npassport.use(\n  new strategy.LocalStrategy(async (username, password, done) => {\n    try {\n      const user = await usersController()._findByUsername(username)\n      if (user.password !== password)\n        return done(null, false, { message: `wrong password` })\n      return done(user)\n    } catch (e) {\n      if (e instanceof ApolloError)\n        return done(null, false, { message: e.message })\n      return done(e)\n    }\n  })\n)\n\nconst options = {\n  jwtFromRequest: function(req) {\n    const token = req && req.cookies ? req.cookies[\"jwt\"] : getToken(\"\")\n    return token\n  },\n  secretOrKey: process.env.JWT_SECRET\n}\n\nconst guestUser = { roles: [\"guest\"] }\nconst jwtStrategy = new JwtStrategy(options, async ({ userId }, done) => {\n  if (!userId) done(null, guestUser)\n  try {\n    const user = await usersController()._findById(userId)\n    return next(null, user)\n  } catch (e) {\n    if (e instanceof ApolloError)\n      return done(null, false, { message: e.message })\n    return done(e)\n  }\n})\npassport.use(jwtStrategy)\n\nconst app = express()\n\napp.use(cookieParser())\napp.use(bodyParser())\napp.use(express.session({ cookie: { maxAge: 60000 } }))\napp.use(flash())\napp.use(passport.initialize())\napp.use(\"/api\", authRouter(passport))\napp.post(\"/graphql\", passport.authenticate([\"jwt\"], { session: false }))\n\nnew ApolloServer({\n  typeDefs,\n  resolvers,\n  graphiql: true,\n  pretty: true,\n  context: (req, res) => {\n    return {\n      user: req.user,\n      controllers: Ramda.map(controller =>\n        controller({ currentUser: req.user })\n      )\n    }\n  }\n})\nserver.applyMiddleware({ app, path: \"/graphql\" })\nserver\n  .listen()\n  .then(({ url }) => console.log(`Running a GraphQL API server at ${url}`))\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583049685229
  },
  "{\"sourceRoot\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server\",\"filename\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/mockStore.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server\",\"plugins\":[{\"key\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/node_modules/babel-plugin-transform-object-rest-spread/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server",
      "filename": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/mockStore.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/node_modules/babel-plugin-transform-object-rest-spread/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/mockStore.js",
        "plugins": [
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/mockStore.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib",
        "sourceFileName": "mockStore.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar mockStore = {\n  users: []\n};\nvar _default = mockStore;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vY2tTdG9yZS5qcyJdLCJuYW1lcyI6WyJtb2NrU3RvcmUiLCJ1c2VycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsSUFBTUEsU0FBUyxHQUFDO0FBQUNDLEVBQUFBLEtBQUssRUFBQztBQUFQLENBQWhCO2VBQ2VELFMiLCJzb3VyY2VSb290IjoiL2hvbWUvZG1pdHJ5L3dlYi1kZXYvc2tpaGFwcHkvd2Vic2l0ZXMvaHVsbCBjbGVhbmluZy9zZXJ2ZXIvbGliIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbmNvbnN0IG1vY2tTdG9yZT17dXNlcnM6W119XG5leHBvcnQgZGVmYXVsdCBtb2NrU3RvcmUiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "mockStore.js"
      ],
      "names": [
        "mockStore",
        "users"
      ],
      "mappings": ";;;;;;AAEA,IAAMA,SAAS,GAAC;AAACC,EAAAA,KAAK,EAAC;AAAP,CAAhB;eACeD,S",
      "sourceRoot": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib",
      "sourcesContent": [
        "\n\nconst mockStore={users:[]}\nexport default mockStore"
      ]
    },
    "sourceType": "script",
    "mtime": 1578576271966
  },
  "{\"sourceRoot\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/modules/users\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server\",\"filename\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/modules/users/controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server\",\"plugins\":[{\"key\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/node_modules/babel-plugin-transform-object-rest-spread/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/modules/users",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server",
      "filename": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/modules/users/controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/node_modules/babel-plugin-transform-object-rest-spread/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/modules/users/controller.js",
        "plugins": [
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/modules/users/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/modules/users",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Collection2 = _interopRequireDefault(require(\"../../utils/Collection\"));\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _controller = _interopRequireDefault(require(\"../permissions/controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar users = [];\n\nvar UsersCollection =\n/*#__PURE__*/\nfunction (_Collection) {\n  _inherits(UsersCollection, _Collection);\n\n  function UsersCollection(props) {\n    _classCallCheck(this, UsersCollection);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UsersCollection).call(this, _objectSpread({\n      name: \"users\"\n    }, props)));\n  }\n\n  _createClass(UsersCollection, [{\n    key: \"_findUser\",\n    value: function () {\n      var _findUser2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(filter, errMessage) {\n        var user, scopes;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = users.find(filter);\n\n                if (!user) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 4;\n                return (0, _controller[\"default\"])()._findUserScopes(user);\n\n              case 4:\n                scopes = _context.sent;\n                return _context.abrupt(\"return\", _objectSpread({}, user, {\n                  scopes: scopes\n                }));\n\n              case 6:\n                throw new _apolloServer.ApolloError(errMessage);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function _findUser(_x, _x2) {\n        return _findUser2.apply(this, arguments);\n      }\n\n      return _findUser;\n    }()\n  }, {\n    key: \"_findByUsername\",\n    value: function () {\n      var _findByUsername2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(username) {\n        var user;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._findUser(function (_ref) {\n                  var username = _ref.username;\n                  return username === usernameToFind;\n                }, \"Username \".concat(username, \" not found\"));\n\n              case 2:\n                user = _context2.sent;\n                return _context2.abrupt(\"return\", user);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _findByUsername(_x3) {\n        return _findByUsername2.apply(this, arguments);\n      }\n\n      return _findByUsername;\n    }()\n  }, {\n    key: \"findByUsername\",\n    value: function () {\n      var _findByUsername3 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(username) {\n        var user;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this._publicMethod(\"findByUsername\", username);\n\n              case 2:\n                user = _context3.sent;\n                return _context3.abrupt(\"return\", user);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function findByUsername(_x4) {\n        return _findByUsername3.apply(this, arguments);\n      }\n\n      return findByUsername;\n    }()\n  }, {\n    key: \"_findById\",\n    value: function () {\n      var _findById2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(idToFind) {\n        var user;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._findUser(function (_ref2) {\n                  var id = _ref2.id;\n                  return id === idToFind;\n                }, \"Username \".concat(username, \" not found\"));\n\n              case 2:\n                user = _context4.sent;\n                return _context4.abrupt(\"return\", user);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function _findById(_x5) {\n        return _findById2.apply(this, arguments);\n      }\n\n      return _findById;\n    }()\n  }, {\n    key: \"findById\",\n    value: function () {\n      var _findById3 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(id) {\n        var user;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this._publicMethod(\"findById\", id);\n\n              case 2:\n                user = _context5.sent;\n                return _context5.abrupt(\"return\", user);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function findById(_x6) {\n        return _findById3.apply(this, arguments);\n      }\n\n      return findById;\n    }()\n  }, {\n    key: \"_add\",\n    value: function () {\n      var _add2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(user) {\n        var newUser;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return this._findByUsername(user.username);\n\n              case 3:\n                _context6.next = 10;\n                break;\n\n              case 5:\n                _context6.prev = 5;\n                _context6.t0 = _context6[\"catch\"](0);\n                newUser = this._createRecord(user);\n                this.users.push(newUser);\n                return _context6.abrupt(\"return\", newUser);\n\n              case 10:\n                _context6.prev = 10;\n                throw new _apolloServer.ApolloError(\"user \".concat(username, \" already exists\"));\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 5, 10, 13]]);\n      }));\n\n      function _add(_x7) {\n        return _add2.apply(this, arguments);\n      }\n\n      return _add;\n    }()\n  }, {\n    key: \"add\",\n    value: function () {\n      var _add3 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(user) {\n        var newUser;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                newUser = this._publicMethod(\"add\", user);\n                return _context7.abrupt(\"return\", newUser);\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function add(_x8) {\n        return _add3.apply(this, arguments);\n      }\n\n      return add;\n    }()\n  }, {\n    key: \"_update\",\n    value: function () {\n      var _update2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(id, updater) {\n        var user;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                user = this._findById(id);\n                Object.assign(userToUpdate, updater);\n                return _context8.abrupt(\"return\", user);\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function _update(_x9, _x10) {\n        return _update2.apply(this, arguments);\n      }\n\n      return _update;\n    }()\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update3 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9(id, updater) {\n        var user;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                user = this._publicMethod(\"update\", id, updater);\n                return _context9.abrupt(\"return\", user);\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function update(_x11, _x12) {\n        return _update3.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"_delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10(idToDelete) {\n        var user, indexToDelete;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this._findById(idToDelete);\n\n              case 2:\n                user = _context10.sent;\n                indexToDelete = users.findIndex(function (_ref3) {\n                  var id = _ref3.id;\n                  return id === idToDelete;\n                });\n                users.splice(indexToDelete, 1);\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function _delete(_x13) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete3 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11(id) {\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                this._publicMethod(\"delete\", id);\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function _delete(_x14) {\n        return _delete3.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }, {\n    key: \"_addComment\",\n    value: function () {\n      var _addComment2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee12(_ref4) {\n        var id, message, user, _user$comments, comments, comment;\n\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                id = _ref4.id, message = _ref4.message;\n                _context12.next = 3;\n                return this._findById(id);\n\n              case 3:\n                user = _context12.sent;\n                _user$comments = user.comments, comments = _user$comments === void 0 ? [] : _user$comments;\n                comment = this._createRecord({\n                  message: message\n                });\n                comments.push(comment);\n                return _context12.abrupt(\"return\", comment);\n\n              case 8:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function _addComment(_x15) {\n        return _addComment2.apply(this, arguments);\n      }\n\n      return _addComment;\n    }()\n  }, {\n    key: \"addComment\",\n    value: function () {\n      var _addComment3 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee13(id, message) {\n        var comment;\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                comment = this._publicMethod(\"addComment\", id, message);\n                return _context13.abrupt(\"return\", comment);\n\n              case 2:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function addComment(_x16, _x17) {\n        return _addComment3.apply(this, arguments);\n      }\n\n      return addComment;\n    }()\n  }]);\n\n  return UsersCollection;\n}(_Collection2[\"default\"]);\n\nvar _default = function _default(props) {\n  return new UsersCollection(props);\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsidXNlcnMiLCJVc2Vyc0NvbGxlY3Rpb24iLCJwcm9wcyIsIm5hbWUiLCJmaWx0ZXIiLCJlcnJNZXNzYWdlIiwidXNlciIsImZpbmQiLCJfZmluZFVzZXJTY29wZXMiLCJzY29wZXMiLCJBcG9sbG9FcnJvciIsInVzZXJuYW1lIiwiX2ZpbmRVc2VyIiwidXNlcm5hbWVUb0ZpbmQiLCJfcHVibGljTWV0aG9kIiwiaWRUb0ZpbmQiLCJpZCIsIl9maW5kQnlVc2VybmFtZSIsIm5ld1VzZXIiLCJfY3JlYXRlUmVjb3JkIiwicHVzaCIsInVwZGF0ZXIiLCJfZmluZEJ5SWQiLCJPYmplY3QiLCJhc3NpZ24iLCJ1c2VyVG9VcGRhdGUiLCJpZFRvRGVsZXRlIiwiaW5kZXhUb0RlbGV0ZSIsImZpbmRJbmRleCIsInNwbGljZSIsIm1lc3NhZ2UiLCJjb21tZW50cyIsImNvbW1lbnQiLCJDb2xsZWN0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsS0FBSyxHQUFHLEVBQWQ7O0lBRU1DLGU7Ozs7O0FBQ0osMkJBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFBQTtBQUNUQyxNQUFBQSxJQUFJLEVBQUU7QUFERyxPQUNTRCxLQURUO0FBRWxCOzs7Ozs7OytDQUVlRSxNLEVBQVFDLFU7Ozs7OztBQUNoQkMsZ0JBQUFBLEksR0FBT04sS0FBSyxDQUFDTyxJQUFOLENBQVdILE1BQVgsQzs7cUJBQ1RFLEk7Ozs7Ozt1QkFDbUIsOEJBQXdCRSxlQUF4QixDQUF3Q0YsSUFBeEMsQzs7O0FBQWZHLGdCQUFBQSxNO21FQUNNSCxJO0FBQU1HLGtCQUFBQSxNQUFNLEVBQU5BOzs7O3NCQUVkLElBQUlDLHlCQUFKLENBQWdCTCxVQUFoQixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBR2NNLFE7Ozs7Ozs7dUJBQ0QsS0FBS0MsU0FBTCxDQUNqQjtBQUFBLHNCQUFHRCxRQUFILFFBQUdBLFFBQUg7QUFBQSx5QkFBa0JBLFFBQVEsS0FBS0UsY0FBL0I7QUFBQSxpQkFEaUIscUJBRUxGLFFBRkssZ0I7OztBQUFiTCxnQkFBQUEsSTtrREFJQ0EsSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQUdZSyxROzs7Ozs7O3VCQUNBLEtBQUtHLGFBQUwsQ0FBbUIsZ0JBQW5CLEVBQXFDSCxRQUFyQyxDOzs7QUFBYkwsZ0JBQUFBLEk7a0RBQ0NBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnREFHT1MsUTs7Ozs7Ozt1QkFDSyxLQUFLSCxTQUFMLENBQ2pCO0FBQUEsc0JBQUdJLEVBQUgsU0FBR0EsRUFBSDtBQUFBLHlCQUFZQSxFQUFFLEtBQUtELFFBQW5CO0FBQUEsaUJBRGlCLHFCQUVMSixRQUZLLGdCOzs7QUFBYkwsZ0JBQUFBLEk7a0RBSUNBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnREFHTVUsRTs7Ozs7Ozt1QkFDTSxLQUFLRixhQUFMLENBQW1CLFVBQW5CLEVBQStCRSxFQUEvQixDOzs7QUFBYlYsZ0JBQUFBLEk7a0RBQ0NBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnREFHRUEsSTs7Ozs7Ozs7dUJBRUQsS0FBS1csZUFBTCxDQUFxQlgsSUFBSSxDQUFDSyxRQUExQixDOzs7Ozs7Ozs7QUFFQU8sZ0JBQUFBLE8sR0FBVSxLQUFLQyxhQUFMLENBQW1CYixJQUFuQixDO0FBQ2hCLHFCQUFLTixLQUFMLENBQVdvQixJQUFYLENBQWdCRixPQUFoQjtrREFDT0EsTzs7OztzQkFFRCxJQUFJUix5QkFBSixnQkFBd0JDLFFBQXhCLHFCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBSUFMLEk7Ozs7OztBQUNGWSxnQkFBQUEsTyxHQUFVLEtBQUtKLGFBQUwsQ0FBbUIsS0FBbkIsRUFBMEJSLElBQTFCLEM7a0RBQ1RZLE87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnREFHS0YsRSxFQUFJSyxPOzs7Ozs7QUFDVmYsZ0JBQUFBLEksR0FBTyxLQUFLZ0IsU0FBTCxDQUFlTixFQUFmLEM7QUFDYk8sZ0JBQUFBLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjQyxZQUFkLEVBQTRCSixPQUE1QjtrREFDT2YsSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQUdJVSxFLEVBQUlLLE87Ozs7OztBQUNUZixnQkFBQUEsSSxHQUFPLEtBQUtRLGFBQUwsQ0FBbUIsUUFBbkIsRUFBNkJFLEVBQTdCLEVBQWlDSyxPQUFqQyxDO2tEQUNOZixJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aURBR0tvQixVOzs7Ozs7O3VCQUNPLEtBQUtKLFNBQUwsQ0FBZUksVUFBZixDOzs7QUFBYnBCLGdCQUFBQSxJO0FBQ0FxQixnQkFBQUEsYSxHQUFnQjNCLEtBQUssQ0FBQzRCLFNBQU4sQ0FBZ0I7QUFBQSxzQkFBR1osRUFBSCxTQUFHQSxFQUFIO0FBQUEseUJBQVlBLEVBQUUsS0FBS1UsVUFBbkI7QUFBQSxpQkFBaEIsQztBQUN0QjFCLGdCQUFBQSxLQUFLLENBQUM2QixNQUFOLENBQWFGLGFBQWIsRUFBNEIsQ0FBNUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztpREFHV1gsRTs7Ozs7QUFDWCxxQkFBS0YsYUFBTCxDQUFtQixRQUFuQixFQUE2QkUsRUFBN0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHa0JBLGdCQUFBQSxFLFNBQUFBLEUsRUFBSWMsTyxTQUFBQSxPOzt1QkFDSCxLQUFLUixTQUFMLENBQWVOLEVBQWYsQzs7O0FBQWJWLGdCQUFBQSxJO2lDQUNvQkEsSSxDQUFsQnlCLFEsRUFBQUEsUSwrQkFBVyxFO0FBQ2JDLGdCQUFBQSxPLEdBQVUsS0FBS2IsYUFBTCxDQUFtQjtBQUFFVyxrQkFBQUEsT0FBTyxFQUFQQTtBQUFGLGlCQUFuQixDO0FBQ2hCQyxnQkFBQUEsUUFBUSxDQUFDWCxJQUFULENBQWNZLE9BQWQ7bURBQ09BLE87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztpREFHUWhCLEUsRUFBSWMsTzs7Ozs7O0FBQ2JFLGdCQUFBQSxPLEdBQVUsS0FBS2xCLGFBQUwsQ0FBbUIsWUFBbkIsRUFBaUNFLEVBQWpDLEVBQXFDYyxPQUFyQyxDO21EQUNURSxPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBeEZtQkMsdUI7O2VBMkZmLGtCQUFBL0IsS0FBSztBQUFBLFNBQUksSUFBSUQsZUFBSixDQUFvQkMsS0FBcEIsQ0FBSjtBQUFBLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvZG1pdHJ5L3dlYi1kZXYvc2tpaGFwcHkvd2Vic2l0ZXMvaHVsbCBjbGVhbmluZy9zZXJ2ZXIvbGliL21vZHVsZXMvdXNlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29sbGVjdGlvbiBmcm9tIFwiLi4vLi4vdXRpbHMvQ29sbGVjdGlvblwiXG5pbXBvcnQgeyBBcG9sbG9FcnJvciB9IGZyb20gXCJhcG9sbG8tc2VydmVyXCJcbmltcG9ydCBwZXJtaXNzaW9uc0NvbnRyb2xsZXIgZnJvbSBcIi4uL3Blcm1pc3Npb25zL2NvbnRyb2xsZXJcIlxuXG5jb25zdCB1c2VycyA9IFtdXG5cbmNsYXNzIFVzZXJzQ29sbGVjdGlvbiBleHRlbmRzIENvbGxlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHsgbmFtZTogXCJ1c2Vyc1wiLCAuLi5wcm9wcyB9KVxuICB9XG5cbiAgYXN5bmMgX2ZpbmRVc2VyKGZpbHRlciwgZXJyTWVzc2FnZSkge1xuICAgIGNvbnN0IHVzZXIgPSB1c2Vycy5maW5kKGZpbHRlcilcbiAgICBpZiAodXNlcikge1xuICAgICAgY29uc3Qgc2NvcGVzID0gYXdhaXQgcGVybWlzc2lvbnNDb250cm9sbGVyKCkuX2ZpbmRVc2VyU2NvcGVzKHVzZXIpXG4gICAgICByZXR1cm4geyAuLi51c2VyLCBzY29wZXMgfVxuICAgIH1cbiAgICB0aHJvdyBuZXcgQXBvbGxvRXJyb3IoZXJyTWVzc2FnZSlcbiAgfVxuXG4gIGFzeW5jIF9maW5kQnlVc2VybmFtZSh1c2VybmFtZSkge1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLl9maW5kVXNlcihcbiAgICAgICh7IHVzZXJuYW1lIH0pID0+IHVzZXJuYW1lID09PSB1c2VybmFtZVRvRmluZCxcbiAgICAgIGBVc2VybmFtZSAke3VzZXJuYW1lfSBub3QgZm91bmRgXG4gICAgKVxuICAgIHJldHVybiB1c2VyXG4gIH1cblxuICBhc3luYyBmaW5kQnlVc2VybmFtZSh1c2VybmFtZSkge1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLl9wdWJsaWNNZXRob2QoXCJmaW5kQnlVc2VybmFtZVwiLCB1c2VybmFtZSlcbiAgICByZXR1cm4gdXNlclxuICB9XG5cbiAgYXN5bmMgX2ZpbmRCeUlkKGlkVG9GaW5kKSB7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMuX2ZpbmRVc2VyKFxuICAgICAgKHsgaWQgfSkgPT4gaWQgPT09IGlkVG9GaW5kLFxuICAgICAgYFVzZXJuYW1lICR7dXNlcm5hbWV9IG5vdCBmb3VuZGBcbiAgICApXG4gICAgcmV0dXJuIHVzZXJcbiAgfVxuXG4gIGFzeW5jIGZpbmRCeUlkKGlkKSB7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMuX3B1YmxpY01ldGhvZChcImZpbmRCeUlkXCIsIGlkKVxuICAgIHJldHVybiB1c2VyXG4gIH1cblxuICBhc3luYyBfYWRkKHVzZXIpIHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy5fZmluZEJ5VXNlcm5hbWUodXNlci51c2VybmFtZSlcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zdCBuZXdVc2VyID0gdGhpcy5fY3JlYXRlUmVjb3JkKHVzZXIpXG4gICAgICB0aGlzLnVzZXJzLnB1c2gobmV3VXNlcilcbiAgICAgIHJldHVybiBuZXdVc2VyXG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHRocm93IG5ldyBBcG9sbG9FcnJvcihgdXNlciAke3VzZXJuYW1lfSBhbHJlYWR5IGV4aXN0c2ApXG4gICAgfVxuICB9XG5cbiAgYXN5bmMgYWRkKHVzZXIpIHtcbiAgICBjb25zdCBuZXdVc2VyID0gdGhpcy5fcHVibGljTWV0aG9kKFwiYWRkXCIsIHVzZXIpXG4gICAgcmV0dXJuIG5ld1VzZXJcbiAgfVxuXG4gIGFzeW5jIF91cGRhdGUoaWQsIHVwZGF0ZXIpIHtcbiAgICBjb25zdCB1c2VyID0gdGhpcy5fZmluZEJ5SWQoaWQpXG4gICAgT2JqZWN0LmFzc2lnbih1c2VyVG9VcGRhdGUsIHVwZGF0ZXIpXG4gICAgcmV0dXJuIHVzZXJcbiAgfVxuXG4gIGFzeW5jIHVwZGF0ZShpZCwgdXBkYXRlcikge1xuICAgIGNvbnN0IHVzZXIgPSB0aGlzLl9wdWJsaWNNZXRob2QoXCJ1cGRhdGVcIiwgaWQsIHVwZGF0ZXIpXG4gICAgcmV0dXJuIHVzZXJcbiAgfVxuXG4gIGFzeW5jIF9kZWxldGUoaWRUb0RlbGV0ZSkge1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLl9maW5kQnlJZChpZFRvRGVsZXRlKVxuICAgIGNvbnN0IGluZGV4VG9EZWxldGUgPSB1c2Vycy5maW5kSW5kZXgoKHsgaWQgfSkgPT4gaWQgPT09IGlkVG9EZWxldGUpXG4gICAgdXNlcnMuc3BsaWNlKGluZGV4VG9EZWxldGUsIDEpXG4gIH1cblxuICBhc3luYyBkZWxldGUoaWQpIHtcbiAgICB0aGlzLl9wdWJsaWNNZXRob2QoXCJkZWxldGVcIiwgaWQpXG4gIH1cblxuICBhc3luYyBfYWRkQ29tbWVudCh7IGlkLCBtZXNzYWdlIH0pIHtcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgdGhpcy5fZmluZEJ5SWQoaWQpXG4gICAgY29uc3QgeyBjb21tZW50cyA9IFtdIH0gPSB1c2VyXG4gICAgY29uc3QgY29tbWVudCA9IHRoaXMuX2NyZWF0ZVJlY29yZCh7IG1lc3NhZ2UgfSlcbiAgICBjb21tZW50cy5wdXNoKGNvbW1lbnQpXG4gICAgcmV0dXJuIGNvbW1lbnRcbiAgfVxuXG4gIGFzeW5jIGFkZENvbW1lbnQoaWQsIG1lc3NhZ2UpIHtcbiAgICBjb25zdCBjb21tZW50ID0gdGhpcy5fcHVibGljTWV0aG9kKFwiYWRkQ29tbWVudFwiLCBpZCwgbWVzc2FnZSlcbiAgICByZXR1cm4gY29tbWVudFxuICB9XG59XG5leHBvcnQgZGVmYXVsdCBwcm9wcyA9PiBuZXcgVXNlcnNDb2xsZWN0aW9uKHByb3BzKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "users",
        "UsersCollection",
        "props",
        "name",
        "filter",
        "errMessage",
        "user",
        "find",
        "_findUserScopes",
        "scopes",
        "ApolloError",
        "username",
        "_findUser",
        "usernameToFind",
        "_publicMethod",
        "idToFind",
        "id",
        "_findByUsername",
        "newUser",
        "_createRecord",
        "push",
        "updater",
        "_findById",
        "Object",
        "assign",
        "userToUpdate",
        "idToDelete",
        "indexToDelete",
        "findIndex",
        "splice",
        "message",
        "comments",
        "comment",
        "Collection"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAG,EAAd;;IAEMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACTC,MAAAA,IAAI,EAAE;AADG,OACSD,KADT;AAElB;;;;;;;+CAEeE,M,EAAQC,U;;;;;;AAChBC,gBAAAA,I,GAAON,KAAK,CAACO,IAAN,CAAWH,MAAX,C;;qBACTE,I;;;;;;uBACmB,8BAAwBE,eAAxB,CAAwCF,IAAxC,C;;;AAAfG,gBAAAA,M;mEACMH,I;AAAMG,kBAAAA,MAAM,EAANA;;;;sBAEd,IAAIC,yBAAJ,CAAgBL,UAAhB,C;;;;;;;;;;;;;;;;;;;;;gDAGcM,Q;;;;;;;uBACD,KAAKC,SAAL,CACjB;AAAA,sBAAGD,QAAH,QAAGA,QAAH;AAAA,yBAAkBA,QAAQ,KAAKE,cAA/B;AAAA,iBADiB,qBAELF,QAFK,gB;;;AAAbL,gBAAAA,I;kDAICA,I;;;;;;;;;;;;;;;;;;;;;gDAGYK,Q;;;;;;;uBACA,KAAKG,aAAL,CAAmB,gBAAnB,EAAqCH,QAArC,C;;;AAAbL,gBAAAA,I;kDACCA,I;;;;;;;;;;;;;;;;;;;;;gDAGOS,Q;;;;;;;uBACK,KAAKH,SAAL,CACjB;AAAA,sBAAGI,EAAH,SAAGA,EAAH;AAAA,yBAAYA,EAAE,KAAKD,QAAnB;AAAA,iBADiB,qBAELJ,QAFK,gB;;;AAAbL,gBAAAA,I;kDAICA,I;;;;;;;;;;;;;;;;;;;;;gDAGMU,E;;;;;;;uBACM,KAAKF,aAAL,CAAmB,UAAnB,EAA+BE,EAA/B,C;;;AAAbV,gBAAAA,I;kDACCA,I;;;;;;;;;;;;;;;;;;;;;gDAGEA,I;;;;;;;;uBAED,KAAKW,eAAL,CAAqBX,IAAI,CAACK,QAA1B,C;;;;;;;;;AAEAO,gBAAAA,O,GAAU,KAAKC,aAAL,CAAmBb,IAAnB,C;AAChB,qBAAKN,KAAL,CAAWoB,IAAX,CAAgBF,OAAhB;kDACOA,O;;;;sBAED,IAAIR,yBAAJ,gBAAwBC,QAAxB,qB;;;;;;;;;;;;;;;;;;;;;gDAIAL,I;;;;;;AACFY,gBAAAA,O,GAAU,KAAKJ,aAAL,CAAmB,KAAnB,EAA0BR,IAA1B,C;kDACTY,O;;;;;;;;;;;;;;;;;;;;;gDAGKF,E,EAAIK,O;;;;;;AACVf,gBAAAA,I,GAAO,KAAKgB,SAAL,CAAeN,EAAf,C;AACbO,gBAAAA,MAAM,CAACC,MAAP,CAAcC,YAAd,EAA4BJ,OAA5B;kDACOf,I;;;;;;;;;;;;;;;;;;;;;gDAGIU,E,EAAIK,O;;;;;;AACTf,gBAAAA,I,GAAO,KAAKQ,aAAL,CAAmB,QAAnB,EAA6BE,EAA7B,EAAiCK,OAAjC,C;kDACNf,I;;;;;;;;;;;;;;;;;;;;;iDAGKoB,U;;;;;;;uBACO,KAAKJ,SAAL,CAAeI,UAAf,C;;;AAAbpB,gBAAAA,I;AACAqB,gBAAAA,a,GAAgB3B,KAAK,CAAC4B,SAAN,CAAgB;AAAA,sBAAGZ,EAAH,SAAGA,EAAH;AAAA,yBAAYA,EAAE,KAAKU,UAAnB;AAAA,iBAAhB,C;AACtB1B,gBAAAA,KAAK,CAAC6B,MAAN,CAAaF,aAAb,EAA4B,CAA5B;;;;;;;;;;;;;;;;;;;;;iDAGWX,E;;;;;AACX,qBAAKF,aAAL,CAAmB,QAAnB,EAA6BE,EAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGkBA,gBAAAA,E,SAAAA,E,EAAIc,O,SAAAA,O;;uBACH,KAAKR,SAAL,CAAeN,EAAf,C;;;AAAbV,gBAAAA,I;iCACoBA,I,CAAlByB,Q,EAAAA,Q,+BAAW,E;AACbC,gBAAAA,O,GAAU,KAAKb,aAAL,CAAmB;AAAEW,kBAAAA,OAAO,EAAPA;AAAF,iBAAnB,C;AAChBC,gBAAAA,QAAQ,CAACX,IAAT,CAAcY,OAAd;mDACOA,O;;;;;;;;;;;;;;;;;;;;;iDAGQhB,E,EAAIc,O;;;;;;AACbE,gBAAAA,O,GAAU,KAAKlB,aAAL,CAAmB,YAAnB,EAAiCE,EAAjC,EAAqCc,OAArC,C;mDACTE,O;;;;;;;;;;;;;;;;;;;EAxFmBC,uB;;eA2Ff,kBAAA/B,KAAK;AAAA,SAAI,IAAID,eAAJ,CAAoBC,KAApB,CAAJ;AAAA,C",
      "sourceRoot": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/modules/users",
      "sourcesContent": [
        "import Collection from \"../../utils/Collection\"\nimport { ApolloError } from \"apollo-server\"\nimport permissionsController from \"../permissions/controller\"\n\nconst users = []\n\nclass UsersCollection extends Collection {\n  constructor(props) {\n    super({ name: \"users\", ...props })\n  }\n\n  async _findUser(filter, errMessage) {\n    const user = users.find(filter)\n    if (user) {\n      const scopes = await permissionsController()._findUserScopes(user)\n      return { ...user, scopes }\n    }\n    throw new ApolloError(errMessage)\n  }\n\n  async _findByUsername(username) {\n    const user = await this._findUser(\n      ({ username }) => username === usernameToFind,\n      `Username ${username} not found`\n    )\n    return user\n  }\n\n  async findByUsername(username) {\n    const user = await this._publicMethod(\"findByUsername\", username)\n    return user\n  }\n\n  async _findById(idToFind) {\n    const user = await this._findUser(\n      ({ id }) => id === idToFind,\n      `Username ${username} not found`\n    )\n    return user\n  }\n\n  async findById(id) {\n    const user = await this._publicMethod(\"findById\", id)\n    return user\n  }\n\n  async _add(user) {\n    try {\n      await this._findByUsername(user.username)\n    } catch (e) {\n      const newUser = this._createRecord(user)\n      this.users.push(newUser)\n      return newUser\n    } finally {\n      throw new ApolloError(`user ${username} already exists`)\n    }\n  }\n\n  async add(user) {\n    const newUser = this._publicMethod(\"add\", user)\n    return newUser\n  }\n\n  async _update(id, updater) {\n    const user = this._findById(id)\n    Object.assign(userToUpdate, updater)\n    return user\n  }\n\n  async update(id, updater) {\n    const user = this._publicMethod(\"update\", id, updater)\n    return user\n  }\n\n  async _delete(idToDelete) {\n    const user = await this._findById(idToDelete)\n    const indexToDelete = users.findIndex(({ id }) => id === idToDelete)\n    users.splice(indexToDelete, 1)\n  }\n\n  async delete(id) {\n    this._publicMethod(\"delete\", id)\n  }\n\n  async _addComment({ id, message }) {\n    const user = await this._findById(id)\n    const { comments = [] } = user\n    const comment = this._createRecord({ message })\n    comments.push(comment)\n    return comment\n  }\n\n  async addComment(id, message) {\n    const comment = this._publicMethod(\"addComment\", id, message)\n    return comment\n  }\n}\nexport default props => new UsersCollection(props)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583010923141
  },
  "{\"sourceRoot\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server\",\"filename\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/utils/Collection.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server\",\"plugins\":[{\"key\":\"/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/node_modules/babel-plugin-transform-object-rest-spread/lib/index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server",
      "filename": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/utils/Collection.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/node_modules/babel-plugin-transform-object-rest-spread/lib/index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/utils/Collection.js",
        "plugins": [
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/utils/Collection.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/utils",
        "sourceFileName": "Collection.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _events = require(\"events\");\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _ramda = require(\"ramda\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Collection =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Collection, _EventEmitter);\n\n  function Collection(_ref) {\n    var _this;\n\n    var name = _ref.name,\n        _ref$currentUser = _ref.currentUser,\n        currentUser = _ref$currentUser === void 0 ? {\n      scopes: []\n    } : _ref$currentUser;\n\n    _classCallCheck(this, Collection);\n\n    var collection = _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, {\n      captureRejections: true\n    }));\n\n    collection.name = name;\n    _this.currentUser = currentUser;\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"_createRecord\",\n    value: function _createRecord(record) {\n      return _objectSpread({}, record, {\n        id: UUID(),\n        dateCreated: Date(),\n        ownerId: this.currentUser ? currentUser.id : undefined\n      });\n    }\n  }, {\n    key: \"_handlePermissions\",\n    value: function _handlePermissions(opName) {\n      var opScope = \"\".concat(this.name, \".\").concat(opName);\n      if (!this.currentUser.scopes.includes(opScope)) throw new _apolloServer.AuthenticationError(\"\".concat(opScope, \": operation not authorized\"));\n    }\n  }, {\n    key: \"_publicMethod\",\n    value: function () {\n      var _publicMethod2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(methodName) {\n        var _len,\n            methodArgs,\n            _key,\n            methodRes,\n            _args = arguments;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this._handlePermissions(methodName);\n\n                for (_len = _args.length, methodArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                  methodArgs[_key - 1] = _args[_key];\n                }\n\n                this.emit.apply(this, [\"before \".concat(methodName)].concat(methodArgs));\n                _context.next = 5;\n                return this[\"_\".concat(methodName)].apply(this, methodArgs);\n\n              case 5:\n                methodRes = _context.sent;\n                this.emit.apply(this, [\"after \".concat(methodName), methodRes].concat(methodArgs));\n                return _context.abrupt(\"return\", methodRes);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _publicMethod(_x) {\n        return _publicMethod2.apply(this, arguments);\n      }\n\n      return _publicMethod;\n    }()\n  }, {\n    key: _events.captureRejectionSymbol,\n    value: function value(err, event) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      console.log(\"Collection \".concat(this.name, \": event \").concat(event, \": err=\").concat(err, \": args=\").concat(args));\n      this.destroy(err);\n    }\n  }]);\n\n  return Collection;\n}(_events.EventEmitter);\n\nvar _default = Collection;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbGxlY3Rpb24uanMiXSwibmFtZXMiOlsiQ29sbGVjdGlvbiIsIm5hbWUiLCJjdXJyZW50VXNlciIsInNjb3BlcyIsImNvbGxlY3Rpb24iLCJjYXB0dXJlUmVqZWN0aW9ucyIsInJlY29yZCIsImlkIiwiVVVJRCIsImRhdGVDcmVhdGVkIiwiRGF0ZSIsIm93bmVySWQiLCJ1bmRlZmluZWQiLCJvcE5hbWUiLCJvcFNjb3BlIiwiaW5jbHVkZXMiLCJBdXRoZW50aWNhdGlvbkVycm9yIiwibWV0aG9kTmFtZSIsIl9oYW5kbGVQZXJtaXNzaW9ucyIsIm1ldGhvZEFyZ3MiLCJlbWl0IiwibWV0aG9kUmVzIiwiY2FwdHVyZVJlamVjdGlvblN5bWJvbCIsImVyciIsImV2ZW50IiwiYXJncyIsImNvbnNvbGUiLCJsb2ciLCJkZXN0cm95IiwiRXZlbnRFbWl0dGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFVBQVU7QUFBQTtBQUFBO0FBQUE7O0FBQ2QsNEJBQW9EO0FBQUE7O0FBQUEsUUFBdENDLElBQXNDLFFBQXRDQSxJQUFzQztBQUFBLGdDQUFoQ0MsV0FBZ0M7QUFBQSxRQUFoQ0EsV0FBZ0MsaUNBQWxCO0FBQUVDLE1BQUFBLE1BQU0sRUFBRTtBQUFWLEtBQWtCOztBQUFBOztBQUNsRCxRQUFNQyxVQUFVLG1GQUFTO0FBQUVDLE1BQUFBLGlCQUFpQixFQUFFO0FBQXJCLEtBQVQsRUFBaEI7O0FBQ0FELElBQUFBLFVBQVUsQ0FBQ0gsSUFBWCxHQUFrQkEsSUFBbEI7QUFDQSxVQUFLQyxXQUFMLEdBQW1CQSxXQUFuQjtBQUhrRDtBQUluRDs7QUFMYTtBQUFBO0FBQUEsa0NBT0FJLE1BUEEsRUFPUTtBQUNwQiwrQkFDS0EsTUFETDtBQUVFQyxRQUFBQSxFQUFFLEVBQUVDLElBQUksRUFGVjtBQUdFQyxRQUFBQSxXQUFXLEVBQUVDLElBQUksRUFIbkI7QUFJRUMsUUFBQUEsT0FBTyxFQUFFLEtBQUtULFdBQUwsR0FBbUJBLFdBQVcsQ0FBQ0ssRUFBL0IsR0FBb0NLO0FBSi9DO0FBTUQ7QUFkYTtBQUFBO0FBQUEsdUNBZ0JLQyxNQWhCTCxFQWdCYTtBQUN6QixVQUFNQyxPQUFPLGFBQU0sS0FBS2IsSUFBWCxjQUFtQlksTUFBbkIsQ0FBYjtBQUNBLFVBQUksQ0FBQyxLQUFLWCxXQUFMLENBQWlCQyxNQUFqQixDQUF3QlksUUFBeEIsQ0FBaUNELE9BQWpDLENBQUwsRUFDRSxNQUFNLElBQUlFLGlDQUFKLFdBQTJCRixPQUEzQixnQ0FBTjtBQUNIO0FBcEJhO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQ0FzQk1HLFVBdEJOO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQXVCWixxQkFBS0Msa0JBQUwsQ0FBd0JELFVBQXhCOztBQXZCWSwwQ0FzQnFCRSxVQXRCckI7QUFzQnFCQSxrQkFBQUEsVUF0QnJCO0FBQUE7O0FBd0JaLHFCQUFLQyxJQUFMLCtCQUFvQkgsVUFBcEIsVUFBcUNFLFVBQXJDO0FBeEJZO0FBQUEsdUJBeUJZLGdCQUFTRixVQUFULGVBQTBCRSxVQUExQixDQXpCWjs7QUFBQTtBQXlCTkUsZ0JBQUFBLFNBekJNO0FBMEJaLHFCQUFLRCxJQUFMLDhCQUFtQkgsVUFBbkIsR0FBaUNJLFNBQWpDLFNBQStDRixVQUEvQztBQTFCWSxpREEyQkxFLFNBM0JLOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQThCYkMsOEJBOUJhO0FBQUEsMEJBOEJXQyxHQTlCWCxFQThCZ0JDLEtBOUJoQixFQThCZ0M7QUFBQSx5Q0FBTkMsSUFBTTtBQUFOQSxRQUFBQSxJQUFNO0FBQUE7O0FBQzVDQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsc0JBQ2dCLEtBQUsxQixJQURyQixxQkFDb0N1QixLQURwQyxtQkFDa0RELEdBRGxELG9CQUMrREUsSUFEL0Q7QUFHQSxXQUFLRyxPQUFMLENBQWFMLEdBQWI7QUFDRDtBQW5DYTs7QUFBQTtBQUFBLEVBQTRCTSxvQkFBNUIsQ0FBaEI7O2VBc0NlN0IsVSIsInNvdXJjZVJvb3QiOiIvaG9tZS9kbWl0cnkvd2ViLWRldi9za2loYXBweS93ZWJzaXRlcy9odWxsIGNsZWFuaW5nL3NlcnZlci9saWIvdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIGNhcHR1cmVSZWplY3Rpb25TeW1ib2wgfSBmcm9tIFwiZXZlbnRzXCJcbmltcG9ydCB7IEF1dGhlbnRpY2F0aW9uRXJyb3IgfSBmcm9tIFwiYXBvbGxvLXNlcnZlclwiXG5pbXBvcnQgeyBhbGwgfSBmcm9tIFwicmFtZGFcIlxuXG5jb25zdCBDb2xsZWN0aW9uID0gY2xhc3MgQ29sbGVjdGlvbiBleHRlbmRzIEV2ZW50RW1pdHRlciB7XG4gIGNvbnN0cnVjdG9yKHsgbmFtZSwgY3VycmVudFVzZXIgPSB7IHNjb3BlczogW10gfSB9KSB7XG4gICAgY29uc3QgY29sbGVjdGlvbiA9IHN1cGVyKHsgY2FwdHVyZVJlamVjdGlvbnM6IHRydWUgfSlcbiAgICBjb2xsZWN0aW9uLm5hbWUgPSBuYW1lXG4gICAgdGhpcy5jdXJyZW50VXNlciA9IGN1cnJlbnRVc2VyXG4gIH1cblxuICBfY3JlYXRlUmVjb3JkKHJlY29yZCkge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5yZWNvcmQsXG4gICAgICBpZDogVVVJRCgpLFxuICAgICAgZGF0ZUNyZWF0ZWQ6IERhdGUoKSxcbiAgICAgIG93bmVySWQ6IHRoaXMuY3VycmVudFVzZXIgPyBjdXJyZW50VXNlci5pZCA6IHVuZGVmaW5lZFxuICAgIH1cbiAgfVxuXG4gIF9oYW5kbGVQZXJtaXNzaW9ucyhvcE5hbWUpIHtcbiAgICBjb25zdCBvcFNjb3BlID0gYCR7dGhpcy5uYW1lfS4ke29wTmFtZX1gXG4gICAgaWYgKCF0aGlzLmN1cnJlbnRVc2VyLnNjb3Blcy5pbmNsdWRlcyhvcFNjb3BlKSlcbiAgICAgIHRocm93IG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKGAke29wU2NvcGV9OiBvcGVyYXRpb24gbm90IGF1dGhvcml6ZWRgKVxuICB9XG5cbiAgYXN5bmMgX3B1YmxpY01ldGhvZChtZXRob2ROYW1lLCAuLi5tZXRob2RBcmdzKSB7XG4gICAgdGhpcy5faGFuZGxlUGVybWlzc2lvbnMobWV0aG9kTmFtZSlcbiAgICB0aGlzLmVtaXQoYGJlZm9yZSAke21ldGhvZE5hbWV9YCwgLi4ubWV0aG9kQXJncylcbiAgICBjb25zdCBtZXRob2RSZXMgPSBhd2FpdCB0aGlzW2BfJHttZXRob2ROYW1lfWBdKC4uLm1ldGhvZEFyZ3MpXG4gICAgdGhpcy5lbWl0KGBhZnRlciAke21ldGhvZE5hbWV9YCwgbWV0aG9kUmVzLCAuLi5tZXRob2RBcmdzKVxuICAgIHJldHVybiBtZXRob2RSZXNcbiAgfVxuXG4gIFtjYXB0dXJlUmVqZWN0aW9uU3ltYm9sXShlcnIsIGV2ZW50LCAuLi5hcmdzKSB7XG4gICAgY29uc29sZS5sb2coXG4gICAgICBgQ29sbGVjdGlvbiAke3RoaXMubmFtZX06IGV2ZW50ICR7ZXZlbnR9OiBlcnI9JHtlcnJ9OiBhcmdzPSR7YXJnc31gXG4gICAgKVxuICAgIHRoaXMuZGVzdHJveShlcnIpXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29sbGVjdGlvblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Collection.js"
      ],
      "names": [
        "Collection",
        "name",
        "currentUser",
        "scopes",
        "collection",
        "captureRejections",
        "record",
        "id",
        "UUID",
        "dateCreated",
        "Date",
        "ownerId",
        "undefined",
        "opName",
        "opScope",
        "includes",
        "AuthenticationError",
        "methodName",
        "_handlePermissions",
        "methodArgs",
        "emit",
        "methodRes",
        "captureRejectionSymbol",
        "err",
        "event",
        "args",
        "console",
        "log",
        "destroy",
        "EventEmitter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,UAAU;AAAA;AAAA;AAAA;;AACd,4BAAoD;AAAA;;AAAA,QAAtCC,IAAsC,QAAtCA,IAAsC;AAAA,gCAAhCC,WAAgC;AAAA,QAAhCA,WAAgC,iCAAlB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAkB;;AAAA;;AAClD,QAAMC,UAAU,mFAAS;AAAEC,MAAAA,iBAAiB,EAAE;AAArB,KAAT,EAAhB;;AACAD,IAAAA,UAAU,CAACH,IAAX,GAAkBA,IAAlB;AACA,UAAKC,WAAL,GAAmBA,WAAnB;AAHkD;AAInD;;AALa;AAAA;AAAA,kCAOAI,MAPA,EAOQ;AACpB,+BACKA,MADL;AAEEC,QAAAA,EAAE,EAAEC,IAAI,EAFV;AAGEC,QAAAA,WAAW,EAAEC,IAAI,EAHnB;AAIEC,QAAAA,OAAO,EAAE,KAAKT,WAAL,GAAmBA,WAAW,CAACK,EAA/B,GAAoCK;AAJ/C;AAMD;AAda;AAAA;AAAA,uCAgBKC,MAhBL,EAgBa;AACzB,UAAMC,OAAO,aAAM,KAAKb,IAAX,cAAmBY,MAAnB,CAAb;AACA,UAAI,CAAC,KAAKX,WAAL,CAAiBC,MAAjB,CAAwBY,QAAxB,CAAiCD,OAAjC,CAAL,EACE,MAAM,IAAIE,iCAAJ,WAA2BF,OAA3B,gCAAN;AACH;AApBa;AAAA;AAAA;AAAA;AAAA;AAAA,+CAsBMG,UAtBN;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAuBZ,qBAAKC,kBAAL,CAAwBD,UAAxB;;AAvBY,0CAsBqBE,UAtBrB;AAsBqBA,kBAAAA,UAtBrB;AAAA;;AAwBZ,qBAAKC,IAAL,+BAAoBH,UAApB,UAAqCE,UAArC;AAxBY;AAAA,uBAyBY,gBAASF,UAAT,eAA0BE,UAA1B,CAzBZ;;AAAA;AAyBNE,gBAAAA,SAzBM;AA0BZ,qBAAKD,IAAL,8BAAmBH,UAAnB,GAAiCI,SAAjC,SAA+CF,UAA/C;AA1BY,iDA2BLE,SA3BK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,SA8BbC,8BA9Ba;AAAA,0BA8BWC,GA9BX,EA8BgBC,KA9BhB,EA8BgC;AAAA,yCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAC5CC,MAAAA,OAAO,CAACC,GAAR,sBACgB,KAAK1B,IADrB,qBACoCuB,KADpC,mBACkDD,GADlD,oBAC+DE,IAD/D;AAGA,WAAKG,OAAL,CAAaL,GAAb;AACD;AAnCa;;AAAA;AAAA,EAA4BM,oBAA5B,CAAhB;;eAsCe7B,U",
      "sourceRoot": "/home/dmitry/web-dev/skihappy/websites/hull cleaning/server/lib/utils",
      "sourcesContent": [
        "import { EventEmitter, captureRejectionSymbol } from \"events\"\nimport { AuthenticationError } from \"apollo-server\"\nimport { all } from \"ramda\"\n\nconst Collection = class Collection extends EventEmitter {\n  constructor({ name, currentUser = { scopes: [] } }) {\n    const collection = super({ captureRejections: true })\n    collection.name = name\n    this.currentUser = currentUser\n  }\n\n  _createRecord(record) {\n    return {\n      ...record,\n      id: UUID(),\n      dateCreated: Date(),\n      ownerId: this.currentUser ? currentUser.id : undefined\n    }\n  }\n\n  _handlePermissions(opName) {\n    const opScope = `${this.name}.${opName}`\n    if (!this.currentUser.scopes.includes(opScope))\n      throw new AuthenticationError(`${opScope}: operation not authorized`)\n  }\n\n  async _publicMethod(methodName, ...methodArgs) {\n    this._handlePermissions(methodName)\n    this.emit(`before ${methodName}`, ...methodArgs)\n    const methodRes = await this[`_${methodName}`](...methodArgs)\n    this.emit(`after ${methodName}`, methodRes, ...methodArgs)\n    return methodRes\n  }\n\n  [captureRejectionSymbol](err, event, ...args) {\n    console.log(\n      `Collection ${this.name}: event ${event}: err=${err}: args=${args}`\n    )\n    this.destroy(err)\n  }\n}\n\nexport default Collection\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583009271141
  }
}